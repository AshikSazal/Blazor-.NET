@inject NavigationManager NavigationManager

@if(Server!=null)
{
    @* used @key to improve the performance*@
    <li @key="Server.ServerId">
        @Server.Name in @Server.City is
        <span style="color: @((Server.IsOnline ? "green" : "red"))">@((Server.IsOnline ? "Online" : "Offline"))</span>
        &nbsp;
        @* routable component can be used as a non-routable component *@
        <button type="button" class="btn btn-link" @onclick="@(()=>{this.editingServer = !this.editingServer;})">Edit</button>
        &nbsp;
        <EditForm Model="Server" FormName="@($"form-Server-{Server.ServerId}")" OnValidSubmit="@(() => { DeleteServer(Server.ServerId);})">
            <button type="submit" class="btn btn-primary">Delete</button>
        </EditForm>

        @* routable component can be used as a non-routable component *@
        @if(editingServer)
        {
            <ServerManagement.Components.Pages.EditServer Id="@this.Server.ServerId"></ServerManagement.Components.Pages.EditServer>
        }
    </li>
}

@code {
    @* routable component can be used as a non-routable component *@
    private bool editingServer = false;

    [Parameter]
    public Server? Server { get; set; }

    private void DeleteServer(int ServerId)
    {
        if (ServerId > 0)
        {
            ServersRepository.DeleteServer(ServerId);
            // true is for refresh the page
            NavigationManager.NavigateTo("/servers",true);
        }
    }
}
